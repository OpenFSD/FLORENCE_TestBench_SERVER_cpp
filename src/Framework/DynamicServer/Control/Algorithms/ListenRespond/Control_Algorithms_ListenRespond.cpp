//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Control Algorithms Listen-Respond : Script File.cpp
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#include "Framework/DynamicServer/Control/Algorithms/ListenRespond/Control_Algorithms_ListenRespond.h"

#include "iostream"

using namespace FLORENCE_Server_Assembly;
//	PUBLIC -==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	CONSTRUCTOR ******************************************************************************************************************************************
// 	******************************************************************************************************************************************************
    Control_Algorithms_ListenRespond::Control_Algorithms_ListenRespond()
    {
   //FIELD(S)
        this->flag_IO_ThreadState = true;
        std::cout << ">> >> >> Field CREATED : Dynamic_Server_Framework/Control_Execute/flag_IO_ThreadState = FALSE" << std::endl;//SIMULATION


    }

    Control_Algorithms_ListenRespond::~Control_Algorithms_ListenRespond()
    {
        //dtor
    }


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------
// GET
    // FIELD(S)
    bool Control_Algorithms_ListenRespond::getFlag_IO_ThreadState(unsigned char coreId)
    {
        std::cout << "CoreID=" << int(coreId) << " " << "Control_Algorithms_ListenRespond::getFlag_IO_ThreadState(unsigned char coreId)<=" << this->flag_IO_ThreadState << std::endl;//SIMULATION
        return this->flag_IO_ThreadState;
    }

// SET
    void Control_Algorithms_ListenRespond::setFlag_IO_ThreadState(bool value, unsigned char coreId)
    {
        this->flag_IO_ThreadState = value;
        std::cout << "CoreID=" << int(coreId) << " " << "Control_Algorithms_ListenRespond::setFlag_IO_ThreadState(bool value, unsigned char coreId)<=" << this->flag_IO_ThreadState << std::endl;//SIMULATION
    }

//	PROTECTED ============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------



//	PRIVATE ==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
// FIELD(S)
    bool Control_Algorithms_ListenRespond::flag_IO_ThreadState = true;

//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------


//End <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
