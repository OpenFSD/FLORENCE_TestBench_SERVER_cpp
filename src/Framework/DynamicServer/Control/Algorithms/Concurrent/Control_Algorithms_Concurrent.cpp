//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Control Algorithms Concurrent : Script File.cpp
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#include "Framework/DynamicServer/Control/Algorithms/Concurrent/Control_Algorithms_Concurrent.h"

#include "iostream"

using namespace FLORENCE_Server_Assembly;
//	PUBLIC -==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	CONSTRUCTOR ******************************************************************************************************************************************
// 	******************************************************************************************************************************************************
    Control_Algorithms_Concurrent::Control_Algorithms_Concurrent()
    {

    }

    Control_Algorithms_Concurrent::~Control_Algorithms_Concurrent()
    {
        //dtor
    }


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
    void Control_Algorithms_Concurrent::doUserProjectAlgorithmsForPraiseEvent(
        Data_Input*             obj_In,
        Algorithms_Concurrent*  obj_Algorithms,
        Data_Output*            obj_Out,
        unsigned char           coreId
    )
    {
        std::cout << "CoreID=" << int(coreId) << " " << "Control_Algorithms_Concurrent::doUserProjectAlgorithmsForPraiseEvent(Data_Input* obj_In, Algorithms_Concurrent* obj_Algorithms, Data_Output* obj_Out, unsigned char coreId)" << std::endl;//SIMULATION
        std::cout << "CoreID=" << int(coreId) << " obj_In->getPraiseEventId()==" << obj_In->getPraiseEventId() << std::endl;//SIMULATION
        switch ( obj_In->getPraiseEventId() )
        {
            case 0://NULL DEFAULT
                obj_Algorithms->do_Praise_0(obj_In, obj_Out, coreId);
                break;

            case 1://USER DEFINED
                //TODO>
                //
                break;
        }
    }

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------



//	PROTECTED ============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------



//	PRIVATE ==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------


//End <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
