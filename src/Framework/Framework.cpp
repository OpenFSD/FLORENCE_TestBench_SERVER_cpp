//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Terminal Wrapper : Script File.cs
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#include "Framework/Framework.h"
#include "Framework/SIMULATION/SIMULATION.h"

#include "iostream"
#include <thread>
using namespace FLORENCE_Server_Assembly;
//	PUBLIC -==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	CONSTRUCTOR ******************************************************************************************************************************************
// 	******************************************************************************************************************************************************
    FLORENCE_Server_Assembly::Framework::Framework()
    {
        std::cout << "        ,     \\      /      ," << std::endl;//SIMULATION
        std::cout << "       / \\    )\\ __ /(     / \\ " << std::endl;//SIMULATION
        std::cout << "      /   \\   (_\\  /_)    /   \\ " << std::endl;//SIMULATION
        std::cout << "____ / ____\\__ \\@  @/ ___/_____\\_____" << std::endl;//SIMULATION
        std::cout << "|              |\\../|               |" << std::endl;//SIMULATION
        std::cout << "|               \\VV/                |" << std::endl;//SIMULATION
        std::cout << "|             FLORANCE              |" << std::endl;//SIMULATION
        std::cout << "|        DEVELOPERS TEMPLATE        |" << std::endl;//SIMULATION
        std::cout << "|___________________________________|" << std::endl;//SIMULATION
        std::cout << "|    / \\ /        \\\\        \\ /\\    |" << std::endl;//SIMULATION
        std::cout << "|  /    V          ))        V   \\  |" << std::endl;//SIMULATION
        std::cout << "|/                //               \\| " << std::endl;//SIMULATION
        std::cout << "`                 V                 '" << std::endl;//SIMULATION

        this->ptr_Framework_DynamicServer = new Framework_DynamicServer();
        std::cout << ">> >> >> Object CREATED : Dynamic_Server_Framework" << std::endl;//SIMULATION

        std::cout << "DEFINTITION of Static Script COMPLETE" << std::endl;//SIMULATION

        std::cout << "INITALISATION of Static Instances COMPLETE" << std::endl;//SIMULATION

        std::cout << "DECLARATION of Dynamic Architecture COMPLETE" << std::endl;//SIMULATION

        this->ptr_Simulation = new SIMULATION();

        this->ptr_ServerLogs = new Logs(
            this->ptr_Framework_DynamicServer->getInstance_Global(),
            this->ptr_Framework_DynamicServer->getInstance_Global()->get_NumCores()
        );

        this->ptr_Framework_DynamicServer->getInstance_Execute()->initialise(
            this->ptr_Framework_DynamicServer,
            this->ptr_ServerLogs,
            this->ptr_Simulation
        );
    }

    FLORENCE_Server_Assembly::Framework::~Framework()
    {
        //dtor
    }



//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------



//	PROTECTED ============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------



//	PRIVATE ==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
    class Framework_DynamicServer* ptr_Framework_DynamicServer = nullptr;
    class Logs* ptr_ServerLogs = nullptr;
    class SIMULATION* ptr_Simulation = nullptr;

//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------


//End <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
