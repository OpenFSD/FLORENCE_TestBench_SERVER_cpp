//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Algorithms : Header File.h
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#ifndef ALGORITHMS_H
#define ALGORITHMS_H

#include "Framework/DynamicServer/Control/Algorithms/Control_Algorithms.h"
#include "Framework/DynamicServer/Algorithms/Concurrent/Algorithms_Concurrent.h"
#include "Framework/DynamicServer/Control/Algorithms/Concurrent/Control_Algorithms_Concurrent.h"
#include "Framework/DynamicServer/Algorithms/ListenRespond/Algorithms_ListenRespond.h"
#include "Framework/DynamicServer/Control/Algorithms/ListenRespond/Control_Algorithms_ListenRespond.h"

#include "iostream"

namespace FLORENCE_Server_Assembly
{
    class Algorithms
    {
//	PUBLIC -==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
        public:
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	CONSTRUCTOR ******************************************************************************************************************************************
// 	******************************************************************************************************************************************************
            Algorithms(unsigned char* ptr_My_Num_Implemented_Cores);
            virtual ~Algorithms();


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------
            class Algorithms_Concurrent* getInstance_Algorithms_Concurrent(unsigned char index);
            class Algorithms_ListenRespond* getInstance_Algorithms_ListenRespond();
            class Control_Algorithms* getInstance_Control_Algorithms();


//	PROTECTED ============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
        protected:
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------



//	PRIVATE ==============================================================================================================================================
//  ======================================================================================================================================================
//  ======================================================================================================================================================
        private:
//	CONSTANTS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************


//	REGISTERS ********************************************************************************************************************************************
// 	******************************************************************************************************************************************************
            static class Control_Algorithms* ptr_Control_Algorithms;
            static class Algorithms_Concurrent* ptr_Algorithms_Concurrent[2];
            static class Algorithms_ListenRespond* ptr_Algorithms_ListenRespond;


//	METHODS **********************************************************************************************************************************************
// 	******************************************************************************************************************************************************

//	GET & SET --------------------------------------------------------------------------------------------------------------------------------------------

    };
}
#endif // ALGORITHMS_H
//End <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
